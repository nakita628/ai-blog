import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const g=JSON.parse('{"title":"ORPCで実現する型安全なAPI開発：実践的な実装パターンとベストプラクティス","description":"フルスタック TypeScript アプリケーションのための型安全な API フレームワーク ORPC の使い方を解説。エンドツーエンドの型安全性、OpenAPI 統合、ストリーミング対応など、実践的な実装パターンとベストプラクティスを紹介します。","frontmatter":{"date":"2025-07-21T00:00:00.000Z","title":"ORPCで実現する型安全なAPI開発：実践的な実装パターンとベストプラクティス","description":"フルスタック TypeScript アプリケーションのための型安全な API フレームワーク ORPC の使い方を解説。エンドツーエンドの型安全性、OpenAPI 統合、ストリーミング対応など、実践的な実装パターンとベストプラクティスを紹介します。","tags":["typescript","api-development","orpc","openapi","type-safety","web-development","backend"],"prev":{"text":"neverthrowで実現する型安全なエラーハンドリング：Result型の実践的活用法","link":"/posts/2025/07/20"},"next":{"text":"React 19の新機能と破壊的変更：進化するReactエコシステムを完全解説","link":"/posts/2025/07/22"}},"headers":[],"relativePath":"posts/2025/07/21.md","filePath":"posts/2025/07/21.md"}'),k={name:"posts/2025/07/21.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",37)])])}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
