import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const g=JSON.parse('{"title":"TypeScriptで実践する関数型エラーハンドリング：neverthrowとPrismaを使った副作用の安全な制御","description":"TypeScriptでneverthrowとPrismaを組み合わせた実践的な関数型プログラミングを解説。副作用を持つデータベース操作をResult型で安全に制御し、エラーハンドリングを型安全に実装する方法を詳しく紹介します。","frontmatter":{"date":"2025-08-22T00:00:00.000Z","title":"TypeScriptで実践する関数型エラーハンドリング：neverthrowとPrismaを使った副作用の安全な制御","description":"TypeScriptでneverthrowとPrismaを組み合わせた実践的な関数型プログラミングを解説。副作用を持つデータベース操作をResult型で安全に制御し、エラーハンドリングを型安全に実装する方法を詳しく紹介します。","tags":["typescript","functional-programming","neverthrow","prisma","error-handling","database","result-type","side-effects"],"prev":{"text":"TypeScriptによる画像軽量化処理：Canvas APIとWeb Workersを使った実践的な最適化手法","link":"/posts/2025/08/19"},"next":{"text":"Drizzle ORMとSQLiteで実践する複雑なデータベース処理：JOIN・トランザクション・バッチ処理の完全ガイド","link":"/posts/2025/08/23"}},"headers":[],"relativePath":"posts/2025/08/22.md","filePath":"posts/2025/08/22.md"}'),k={name:"posts/2025/08/22.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",54)])])}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
