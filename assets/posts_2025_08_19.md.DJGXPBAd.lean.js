import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const d=JSON.parse('{"title":"TypeScriptによる画像軽量化処理：Canvas APIとWeb Workersを使った実践的な最適化手法","description":"TypeScriptで画像の軽量化処理を実装する方法を詳しく解説。Canvas APIを使ったリサイズ・圧縮、Web Workersによる非同期処理、ファイルサイズ削減の実践テクニックまで、パフォーマンスを重視した画像最適化の実装方法を紹介します。","frontmatter":{"date":"2025-08-19T00:00:00.000Z","title":"TypeScriptによる画像軽量化処理：Canvas APIとWeb Workersを使った実践的な最適化手法","description":"TypeScriptで画像の軽量化処理を実装する方法を詳しく解説。Canvas APIを使ったリサイズ・圧縮、Web Workersによる非同期処理、ファイルサイズ削減の実践テクニックまで、パフォーマンスを重視した画像最適化の実装方法を紹介します。","tags":["typescript","image-optimization","canvas-api","web-workers","performance","file-compression","web-development","frontend"],"prev":{"text":"Terraform完全入門：初心者でもわかるインフラのコード化とベストプラクティス","link":"/posts/2025/08/18"},"next":{"text":"TypeScriptで実践する関数型エラーハンドリング：neverthrowとPrismaを使った副作用の安全な制御","link":"/posts/2025/08/22"}},"headers":[],"relativePath":"posts/2025/08/19.md","filePath":"posts/2025/08/19.md"}'),k={name:"posts/2025/08/19.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",39)])])}const y=i(k,[["render",l]]);export{d as __pageData,y as default};
