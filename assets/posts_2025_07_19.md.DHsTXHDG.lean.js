import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const g=JSON.parse('{"title":"RemixでTypeScriptベースのフルスタック開発：効率的なバックエンド実装ガイド","description":"Remixを使用したモダンなフルスタック開発の方法を解説。ネストされたルーティング、データローディング、エラーハンドリングなど、Remixの特徴的な機能を活用したバックエンド実装のベストプラクティスを紹介します。","frontmatter":{"date":"2025-07-19T00:00:00.000Z","title":"RemixでTypeScriptベースのフルスタック開発：効率的なバックエンド実装ガイド","description":"Remixを使用したモダンなフルスタック開発の方法を解説。ネストされたルーティング、データローディング、エラーハンドリングなど、Remixの特徴的な機能を活用したバックエンド実装のベストプラクティスを紹介します。","tags":["remix","typescript","react","fullstack","web-development","nodejs","server-side-rendering"],"prev":{"text":"ReactでのCookie管理：セキュアで効率的な実装パターン","link":"/posts/2025/07/18"},"next":{"text":"neverthrowで実現する型安全なエラーハンドリング：Result型の実践的活用法","link":"/posts/2025/07/20"}},"headers":[],"relativePath":"posts/2025/07/19.md","filePath":"posts/2025/07/19.md"}'),k={name:"posts/2025/07/19.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",28)])])}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
