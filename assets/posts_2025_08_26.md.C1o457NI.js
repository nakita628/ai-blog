import{_ as e,C as E,c as r,o as a,a7 as n,b as h,w as i,a as p,G as t,a8 as k}from"./chunks/framework.zg2pR_DR.js";const B=JSON.parse('{"title":"Cloud Run完全入門：初心者でもわかるサーバーレスアプリ開発の始め方","description":"Google Cloud Runの基本概念から実際のデプロイまで、初心者向けに図解付きで徹底解説。Docker、コンテナ、サーバーレスの基礎知識も含めて、実践的なサンプルコードとともに学ぶ。","frontmatter":{"date":"2025-08-26T00:00:00.000Z","title":"Cloud Run完全入門：初心者でもわかるサーバーレスアプリ開発の始め方","description":"Google Cloud Runの基本概念から実際のデプロイまで、初心者向けに図解付きで徹底解説。Docker、コンテナ、サーバーレスの基礎知識も含めて、実践的なサンプルコードとともに学ぶ。","tags":["cloud-run","google-cloud","docker","serverless","containers","deployment"],"prev":{"text":"Clean Architecture達人に学ぶソフトウェアの構造と設計：設計思想とディレクトリ構成を読書前に理解する","link":"/posts/2025/08/25"},"next":{"text":"Auth.js (NextAuth v5) 完全ガイド：Prisma連携とJWTセッション両方の実装パターン","link":"/posts/2025/08/27"}},"headers":[],"relativePath":"posts/2025/08/26.md","filePath":"posts/2025/08/26.md"}'),d={name:"posts/2025/08/26.md"};function g(o,s,F,y,c,C){const l=E("Mermaid");return a(),r("div",null,[s[6]||(s[6]=n('<h1 id="cloud-run完全入門-初心者でもわかるサーバーレスアプリ開発の始め方" tabindex="-1">Cloud Run完全入門：初心者でもわかるサーバーレスアプリ開発の始め方 <a class="header-anchor" href="#cloud-run完全入門-初心者でもわかるサーバーレスアプリ開発の始め方" aria-label="Permalink to &quot;Cloud Run完全入門：初心者でもわかるサーバーレスアプリ開発の始め方&quot;">​</a></h1><p>「サーバーレス」「コンテナ」「Cloud Run」という言葉を聞いたことはあるけど、実際に何ができるのかよくわからない。そんな初心者の方に向けて、Google Cloud Runの基本概念から実際のアプリケーションデプロイまでを、図解付きでわかりやすく解説する。</p><h2 id="cloud-runって何-なぜ注目されているの" tabindex="-1">Cloud Runって何？なぜ注目されているの？ <a class="header-anchor" href="#cloud-runって何-なぜ注目されているの" aria-label="Permalink to &quot;Cloud Runって何？なぜ注目されているの？&quot;">​</a></h2><h3 id="従来のサーバー運用の課題" tabindex="-1">従来のサーバー運用の課題 <a class="header-anchor" href="#従来のサーバー運用の課題" aria-label="Permalink to &quot;従来のサーバー運用の課題&quot;">​</a></h3><p>まず、従来のWebアプリケーション運用がどのような課題を抱えていたかを見てみよう。</p>',5)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-15",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20subgraph%20%22%E5%BE%93%E6%9D%A5%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E9%81%8B%E7%94%A8%22%0A%20%20%20%20%20%20%20%20A%5B%E7%89%A9%E7%90%86%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%B3%BC%E5%85%A5%5D%20--%3E%20B%5BOS%E8%A8%AD%E5%AE%9A%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5B%E3%83%9F%E3%83%89%E3%83%AB%E3%82%A6%E3%82%A7%E3%82%A2%E8%A8%AD%E5%AE%9A%5D%0A%20%20%20%20%20%20%20%20C%20--%3E%20D%5B%E3%82%A2%E3%83%97%E3%83%AA%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%5D%0A%20%20%20%20%20%20%20%20D%20--%3E%20E%5B%E7%9B%A3%E8%A6%96%E3%83%BB%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%B3%E3%82%B9%5D%0A%20%20%20%20%20%20%20%20E%20--%3E%20F%5B%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AB%E3%82%A2%E3%82%A6%E3%83%88%E4%BD%9C%E6%A5%AD%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22%E8%AA%B2%E9%A1%8C%22%0A%20%20%20%20%20%20%20%20G%5B%E5%88%9D%E6%9C%9F%E3%82%B3%E3%82%B9%E3%83%88%E3%81%8C%E9%AB%98%E3%81%84%5D%0A%20%20%20%20%20%20%20%20H%5B%E8%A8%AD%E5%AE%9A%E3%81%8C%E8%A4%87%E9%9B%91%5D%0A%20%20%20%20%20%20%20%20I%5B%E4%BF%9D%E5%AE%88%E4%BD%9C%E6%A5%AD%E3%81%8C%E5%A4%A7%E5%A4%89%5D%0A%20%20%20%20%20%20%20%20J%5B%E6%80%A5%E3%81%AA%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%A2%97%E3%81%AB%E5%AF%BE%E5%BF%9C%E5%9B%B0%E9%9B%A3%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20A%20--%3E%20G%0A%20%20%20%20B%20--%3E%20H%0A%20%20%20%20E%20--%3E%20I%0A%20%20%20%20F%20--%3E%20J%0A"})]),fallback:i(()=>[...s[0]||(s[0]=[p(" Loading... ",-1)])]),_:1})),s[7]||(s[7]=n('<p><strong>主な課題</strong>：</p><ul><li><strong>初期コスト</strong>: サーバー購入、設定に時間とお金がかかる</li><li><strong>運用負荷</strong>: OS更新、セキュリティパッチ、監視などの作業が必要</li><li><strong>スケーラビリティ</strong>: アクセスが急増した時の対応が困難</li><li><strong>無駄なコスト</strong>: アクセスが少ない時も常にサーバーが稼働</li></ul><h3 id="cloud-runが解決すること" tabindex="-1">Cloud Runが解決すること <a class="header-anchor" href="#cloud-runが解決すること" aria-label="Permalink to &quot;Cloud Runが解決すること&quot;">​</a></h3><p>Cloud Runは、これらの課題を一気に解決するサービスだ。</p>',4)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-47",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20subgraph%20%22%E3%81%82%E3%81%AA%E3%81%9F%E3%81%8C%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8%22%0A%20%20%20%20%20%20%20%20A%5B%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E6%9B%B8%E3%81%8F%5D%20--%3E%20B%5BDocker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5BCloud%20Run%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22Cloud%20Run%E3%81%8C%E8%87%AA%E5%8B%95%E3%81%A7%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8%22%0A%20%20%20%20%20%20%20%20D%5B%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E7%AE%A1%E7%90%86%5D%0A%20%20%20%20%20%20%20%20E%5B%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AA%E3%83%B3%E3%82%B0%5D%0A%20%20%20%20%20%20%20%20F%5B%E8%B2%A0%E8%8D%B7%E5%88%86%E6%95%A3%5D%0A%20%20%20%20%20%20%20%20G%5B%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E6%9B%B4%E6%96%B0%5D%0A%20%20%20%20%20%20%20%20H%5B%E7%9B%A3%E8%A6%96%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20C%20--%3E%20D%0A%20%20%20%20C%20--%3E%20E%0A%20%20%20%20C%20--%3E%20F%0A%20%20%20%20C%20--%3E%20G%0A%20%20%20%20C%20--%3E%20H%0A%20%20%20%20%0A%20%20%20%20style%20A%20fill%3A%23e1f5fe%0A%20%20%20%20style%20B%20fill%3A%23e1f5fe%0A%20%20%20%20style%20C%20fill%3A%23e1f5fe%0A%20%20%20%20style%20D%20fill%3A%23f3e5f5%0A%20%20%20%20style%20E%20fill%3A%23f3e5f5%0A%20%20%20%20style%20F%20fill%3A%23f3e5f5%0A%20%20%20%20style%20G%20fill%3A%23f3e5f5%0A%20%20%20%20style%20H%20fill%3A%23f3e5f5%0A"})]),fallback:i(()=>[...s[1]||(s[1]=[p(" Loading... ",-1)])]),_:1})),s[8]||(s[8]=n('<h3 id="cloud-runの3つの大きなメリット" tabindex="-1">Cloud Runの3つの大きなメリット <a class="header-anchor" href="#cloud-runの3つの大きなメリット" aria-label="Permalink to &quot;Cloud Runの3つの大きなメリット&quot;">​</a></h3><h4 id="_1-サーバーレス-サーバー管理不要" tabindex="-1">1. <strong>サーバーレス = サーバー管理不要</strong> <a class="header-anchor" href="#_1-サーバーレス-サーバー管理不要" aria-label="Permalink to &quot;1. **サーバーレス = サーバー管理不要**&quot;">​</a></h4><ul><li>OS更新、セキュリティパッチ、監視などは全てGoogleが担当</li><li>あなたはアプリケーションのコードだけに集中できる</li></ul><h4 id="_2-従量課金-使った分だけ支払い" tabindex="-1">2. <strong>従量課金 = 使った分だけ支払い</strong> <a class="header-anchor" href="#_2-従量課金-使った分だけ支払い" aria-label="Permalink to &quot;2. **従量課金 = 使った分だけ支払い**&quot;">​</a></h4>',4)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-69",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20subgraph%20%22%E5%BE%93%E6%9D%A5%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%22%0A%20%20%20%20%20%20%20%20A%5B24%E6%99%82%E9%96%93365%E6%97%A5%E7%A8%BC%E5%83%8D%5D%0A%20%20%20%20%20%20%20%20A%20--%3E%20B%5B%E6%9C%88%E9%A1%8D%E5%9B%BA%E5%AE%9A%E8%B2%BB%E7%94%A8%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5B%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%8C%E5%B0%91%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82%E5%90%8C%E3%81%98%E6%96%99%E9%87%91%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22Cloud%20Run%22%0A%20%20%20%20%20%20%20%20D%5B%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%8C%E3%81%82%E3%82%8B%E6%99%82%E3%81%A0%E3%81%91%E7%A8%BC%E5%83%8D%5D%0A%20%20%20%20%20%20%20%20D%20--%3E%20E%5B%E5%AE%9F%E9%9A%9B%E3%81%AE%E4%BD%BF%E7%94%A8%E9%87%8F%E3%81%AB%E5%BF%9C%E3%81%98%E3%81%9F%E8%AA%B2%E9%87%91%5D%0A%20%20%20%20%20%20%20%20E%20--%3E%20F%5B%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%8C%E3%81%AA%E3%81%91%E3%82%8C%E3%81%B0%E6%96%99%E9%87%91%E3%82%82%E3%82%BC%E3%83%AD%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20style%20A%20fill%3A%23ffcdd2%0A%20%20%20%20style%20B%20fill%3A%23ffcdd2%0A%20%20%20%20style%20C%20fill%3A%23ffcdd2%0A%20%20%20%20style%20D%20fill%3A%23c8e6c9%0A%20%20%20%20style%20E%20fill%3A%23c8e6c9%0A%20%20%20%20style%20F%20fill%3A%23c8e6c9%0A"})]),fallback:i(()=>[...s[2]||(s[2]=[p(" Loading... ",-1)])]),_:1})),s[9]||(s[9]=n('<h4 id="_3-自動スケーリング-アクセス増減に自動対応" tabindex="-1">3. <strong>自動スケーリング = アクセス増減に自動対応</strong> <a class="header-anchor" href="#_3-自動スケーリング-アクセス増減に自動対応" aria-label="Permalink to &quot;3. **自動スケーリング = アクセス増減に自動対応**&quot;">​</a></h4><ul><li>急にアクセスが増えても自動で処理能力を拡張</li><li>アクセスが減れば自動で縮小してコスト削減</li></ul><h2 id="dockerコンテナって何-なぜcloud-runで必要なの" tabindex="-1">Dockerコンテナって何？なぜCloud Runで必要なの？ <a class="header-anchor" href="#dockerコンテナって何-なぜcloud-runで必要なの" aria-label="Permalink to &quot;Dockerコンテナって何？なぜCloud Runで必要なの？&quot;">​</a></h2><p>「コンテナ」という言葉を聞いたことはあるけど、実際に何なのかピンとこない方も多いだろう。身近な例で説明してみよう。</p><h3 id="引っ越しの例で理解するコンテナ" tabindex="-1">引っ越しの例で理解するコンテナ <a class="header-anchor" href="#引っ越しの例で理解するコンテナ" aria-label="Permalink to &quot;引っ越しの例で理解するコンテナ&quot;">​</a></h3>',5)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-94",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20subgraph%20%22%E5%BE%93%E6%9D%A5%E3%81%AE%E6%96%B9%E6%B3%95%EF%BC%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%81%A7%E3%83%90%E3%83%A9%E3%83%90%E3%83%A9%E3%81%AB%E9%81%8B%E3%81%B6%EF%BC%89%22%0A%20%20%20%20%20%20%20%20A%5B%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%5D%20--%3E%20D%5B%E3%83%88%E3%83%A9%E3%83%83%E3%82%AF%5D%0A%20%20%20%20%20%20%20%20B%5B%E6%A4%85%E5%AD%90%5D%20--%3E%20D%0A%20%20%20%20%20%20%20%20C%5B%E6%9C%AC%E6%A3%9A%5D%20--%3E%20D%0A%20%20%20%20%20%20%20%20D%20--%3E%20E%5B%E6%96%B0%E5%B1%85%E3%81%A7%E5%86%8D%E7%B5%84%E3%81%BF%E7%AB%8B%E3%81%A6%5D%0A%20%20%20%20%20%20%20%20E%20--%3E%20F%5B%E5%8B%95%E3%81%8B%E3%81%AA%E3%81%84%EF%BC%81%E8%A8%AD%E5%AE%9A%E3%81%8C%E9%81%95%E3%81%86%EF%BC%81%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%96%B9%E5%BC%8F%EF%BC%88%E5%85%A8%E9%83%A8%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E9%81%8B%E3%81%B6%EF%BC%89%22%0A%20%20%20%20%20%20%20%20G%5B%E3%82%A2%E3%83%97%E3%83%AA%5D%20--%3E%20J%5B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%5D%0A%20%20%20%20%20%20%20%20H%5B%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%5D%20--%3E%20J%0A%20%20%20%20%20%20%20%20I%5B%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%5D%20--%3E%20J%0A%20%20%20%20%20%20%20%20J%20--%3E%20K%5B%E3%81%A9%E3%81%93%E3%81%A7%E3%82%82%E5%90%8C%E3%81%98%E3%82%88%E3%81%86%E3%81%AB%E5%8B%95%E3%81%8F%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20style%20F%20fill%3A%23ffcdd2%0A%20%20%20%20style%20K%20fill%3A%23c8e6c9%0A"})]),fallback:i(()=>[...s[3]||(s[3]=[p(" Loading... ",-1)])]),_:1})),s[10]||(s[10]=n('<p><strong>従来の問題</strong>：</p><ul><li>開発環境では動くのに、本番環境では動かない</li><li>「私の環境では動くんですけど...」問題</li><li>依存関係やライブラリのバージョン違いでトラブル</li></ul><p><strong>コンテナの解決策</strong>：</p><ul><li>アプリケーションと必要な環境を全部まとめて「箱」に詰める</li><li>どこで実行しても同じように動く</li><li>環境の違いによるトラブルを根本的に解決</li></ul><h3 id="cloud-runとコンテナの関係" tabindex="-1">Cloud Runとコンテナの関係 <a class="header-anchor" href="#cloud-runとコンテナの関係" aria-label="Permalink to &quot;Cloud Runとコンテナの関係&quot;">​</a></h3>',5)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-138",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20subgraph%20%22%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E4%BD%9C%E6%A5%AD%22%0A%20%20%20%20%20%20%20%20A%5B%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E6%9B%B8%E3%81%8F%5D%20--%3E%20B%5BDockerfile%E3%82%92%E4%BD%9C%E3%82%8B%5D%0A%20%20%20%20%20%20%20%20B%20--%3E%20C%5BDocker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22Cloud%20Run%E3%81%A7%E3%81%AE%E5%AE%9F%E8%A1%8C%22%0A%20%20%20%20%20%20%20%20D%5B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%8C%E8%B5%B7%E5%8B%95%5D%20--%3E%20E%5B%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%82%92%E5%87%A6%E7%90%86%5D%0A%20%20%20%20%20%20%20%20E%20--%3E%20F%5B%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%82%92%E8%BF%94%E3%81%99%5D%0A%20%20%20%20%20%20%20%20F%20--%3E%20G%5B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%8C%E5%81%9C%E6%AD%A2%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20C%20--%3E%20D%0A%20%20%20%20%0A%20%20%20%20style%20A%20fill%3A%23e3f2fd%0A%20%20%20%20style%20B%20fill%3A%23e3f2fd%0A%20%20%20%20style%20C%20fill%3A%23e3f2fd%0A%20%20%20%20style%20D%20fill%3A%23e8f5e8%0A%20%20%20%20style%20E%20fill%3A%23e8f5e8%0A%20%20%20%20style%20F%20fill%3A%23e8f5e8%0A%20%20%20%20style%20G%20fill%3A%23e8f5e8%0A"})]),fallback:i(()=>[...s[4]||(s[4]=[p(" Loading... ",-1)])]),_:1})),s[11]||(s[11]=n(`<p>Cloud Runは、あなたが作ったコンテナを以下のように管理する：</p><ol><li><strong>リクエストが来た時だけコンテナを起動</strong></li><li><strong>処理が終わったらコンテナを停止</strong></li><li><strong>アクセスが多い時は複数のコンテナを並行実行</strong></li><li><strong>アクセスがない時はコンテナを完全に停止（料金もゼロ）</strong></li></ol><h2 id="実際にやってみよう-シンプルなwebアプリをcloud-runにデプロイ" tabindex="-1">実際にやってみよう！シンプルなWebアプリをCloud Runにデプロイ <a class="header-anchor" href="#実際にやってみよう-シンプルなwebアプリをcloud-runにデプロイ" aria-label="Permalink to &quot;実際にやってみよう！シンプルなWebアプリをCloud Runにデプロイ&quot;">​</a></h2><p>ここからは、実際に手を動かしながらCloud Runを体験してみよう。まずは最もシンプルなWebアプリから始める。</p><h3 id="準備-必要なツールをインストール" tabindex="-1">準備：必要なツールをインストール <a class="header-anchor" href="#準備-必要なツールをインストール" aria-label="Permalink to &quot;準備：必要なツールをインストール&quot;">​</a></h3><h4 id="_1-google-cloud-cliのインストール" tabindex="-1">1. Google Cloud CLIのインストール <a class="header-anchor" href="#_1-google-cloud-cliのインストール" aria-label="Permalink to &quot;1. Google Cloud CLIのインストール&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOSの場合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> google-cloud-sdk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windowsの場合は公式サイトからインストーラーをダウンロード</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://cloud.google.com/sdk/docs/install</span></span></code></pre></div><h4 id="_2-dockerのインストール" tabindex="-1">2. Dockerのインストール <a class="header-anchor" href="#_2-dockerのインストール" aria-label="Permalink to &quot;2. Dockerのインストール&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOSの場合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># または Docker Desktop をインストール</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://www.docker.com/products/docker-desktop</span></span></code></pre></div><h4 id="_3-google-cloudプロジェクトの設定" tabindex="-1">3. Google Cloudプロジェクトの設定 <a class="header-anchor" href="#_3-google-cloudプロジェクトの設定" aria-label="Permalink to &quot;3. Google Cloudプロジェクトの設定&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Google Cloudにログイン</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># プロジェクトを作成（PROJECT_IDは任意の名前）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projects</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cloudrun-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># プロジェクトを選択</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cloudrun-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cloud Run APIを有効化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run.googleapis.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artifactregistry.googleapis.com</span></span></code></pre></div><h3 id="step-1-超シンプルなnode-jsアプリを作る" tabindex="-1">Step 1: 超シンプルなNode.jsアプリを作る <a class="header-anchor" href="#step-1-超シンプルなnode-jsアプリを作る" aria-label="Permalink to &quot;Step 1: 超シンプルなNode.jsアプリを作る&quot;">​</a></h3><p>まずは「Hello, Cloud Run!」を表示するだけのシンプルなWebアプリを作ろう。</p><h4 id="プロジェクトディレクトリを作成" tabindex="-1">プロジェクトディレクトリを作成 <a class="header-anchor" href="#プロジェクトディレクトリを作成" aria-label="Permalink to &quot;プロジェクトディレクトリを作成&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-cloudrun-app</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-cloudrun-app</span></span></code></pre></div><h4 id="package-jsonを作成" tabindex="-1">package.jsonを作成 <a class="header-anchor" href="#package-jsonを作成" aria-label="Permalink to &quot;package.jsonを作成&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-first-cloudrun-app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My first Cloud Run application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;server.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node server.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;express&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^4.18.2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="server-jsを作成" tabindex="-1">server.jsを作成 <a class="header-anchor" href="#server-jsを作成" aria-label="Permalink to &quot;server.jsを作成&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> express</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;express&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> express</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Cloud Runは環境変数PORTでポート番号を指定する</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ルートパスでシンプルなメッセージを返す</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, Cloud Run! 🚀&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timestamp: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toISOString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ヘルスチェック用エンドポイント（Cloud Runが正常性を確認するため）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/healthz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;OK&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 優雅なシャットダウン（Cloud Runがコンテナを停止する時に必要）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGTERM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGTERM received, shutting down gracefully&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Server running on port \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="step-2-dockerfileを作成" tabindex="-1">Step 2: Dockerfileを作成 <a class="header-anchor" href="#step-2-dockerfileを作成" aria-label="Permalink to &quot;Step 2: Dockerfileを作成&quot;">​</a></h3><p>アプリケーションをコンテナ化するためのDockerfileを作成する。</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node.js 18の軽量版をベースイメージとして使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node:18-slim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 作業ディレクトリを設定</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># package.jsonとpackage-lock.json（あれば）をコピー</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> package*.json ./</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依存関係をインストール</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> npm ci --only=production</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># アプリケーションのソースコードをコピー</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 非rootユーザーを作成してセキュリティを向上</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> useradd -m -u 10001 -s /usr/sbin/nologin appuser</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appuser</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ポート8080を公開</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># アプリケーションを起動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="step-3-dockerignoreを作成" tabindex="-1">Step 3: .dockerignoreを作成 <a class="header-anchor" href="#step-3-dockerignoreを作成" aria-label="Permalink to &quot;Step 3: .dockerignoreを作成&quot;">​</a></h3><p>不要なファイルをコンテナに含めないようにする。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_modules</span></span>
<span class="line"><span>npm-debug.log</span></span>
<span class="line"><span>.git</span></span>
<span class="line"><span>.gitignore</span></span>
<span class="line"><span>README.md</span></span>
<span class="line"><span>.env</span></span>
<span class="line"><span>.nyc_output</span></span>
<span class="line"><span>coverage</span></span>
<span class="line"><span>.cache</span></span></code></pre></div><h3 id="step-4-ローカルでテスト" tabindex="-1">Step 4: ローカルでテスト <a class="header-anchor" href="#step-4-ローカルでテスト" aria-label="Permalink to &quot;Step 4: ローカルでテスト&quot;">​</a></h3><p>まずはローカルでアプリが正常に動作するか確認しよう。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依存関係をインストール</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># アプリを起動</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>ブラウザで <code>http://localhost:8080</code> にアクセスして、JSONレスポンスが返ってくることを確認する。</p><h3 id="step-5-dockerイメージをビルドしてテスト" tabindex="-1">Step 5: Dockerイメージをビルドしてテスト <a class="header-anchor" href="#step-5-dockerイメージをビルドしてテスト" aria-label="Permalink to &quot;Step 5: Dockerイメージをビルドしてテスト&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Dockerイメージをビルド</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-cloudrun-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ローカルでコンテナを実行してテスト</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:8080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-cloudrun-app</span></span></code></pre></div><p>再度 <code>http://localhost:8080</code> にアクセスして動作確認する。</p><h3 id="step-6-google-cloud-artifact-registryにイメージをプッシュ" tabindex="-1">Step 6: Google Cloud Artifact Registryにイメージをプッシュ <a class="header-anchor" href="#step-6-google-cloud-artifact-registryにイメージをプッシュ" aria-label="Permalink to &quot;Step 6: Google Cloud Artifact Registryにイメージをプッシュ&quot;">​</a></h3><p>Cloud Runで使用するため、DockerイメージをGoogle Cloudに保存する必要がある。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Artifact Registryのリポジトリを作成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artifacts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repositories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --repository-format=docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --location=asia-northeast1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --description=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My first Cloud Run repository&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Docker認証を設定</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure-docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1-docker.pkg.dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># イメージにタグを付ける</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-cloudrun-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    asia-northeast1-docker.pkg.dev/my-cloudrun-project/my-repo/my-first-cloudrun-app:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># イメージをプッシュ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1-docker.pkg.dev/my-cloudrun-project/my-repo/my-first-cloudrun-app:latest</span></span></code></pre></div><h3 id="step-7-cloud-runにデプロイ" tabindex="-1">Step 7: Cloud Runにデプロイ <a class="header-anchor" href="#step-7-cloud-runにデプロイ" aria-label="Permalink to &quot;Step 7: Cloud Runにデプロイ&quot;">​</a></h3><p>ついに、Cloud Runにアプリケーションをデプロイする！</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-first-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1-docker.pkg.dev/my-cloudrun-project/my-repo/my-first-cloudrun-app:latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --platform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> managed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --allow-unauthenticated</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --memory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 512Mi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --cpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --min-instances</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --max-instances</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre></div><p><strong>各オプションの説明</strong>：</p><ul><li><code>--allow-unauthenticated</code>: 誰でもアクセス可能にする</li><li><code>--memory 512Mi</code>: メモリを512MBに設定</li><li><code>--cpu 1</code>: CPU を1コアに設定</li><li><code>--min-instances 0</code>: アクセスがない時はインスタンス数を0にしてコスト削減</li><li><code>--max-instances 10</code>: 最大10個まで並行実行可能</li></ul><p>デプロイが完了すると、URLが表示される。そのURLにアクセスして、あなたのアプリがCloud Run上で動いていることを確認しよう！</p><h2 id="より実践的な例-データベース連携アプリ" tabindex="-1">より実践的な例：データベース連携アプリ <a class="header-anchor" href="#より実践的な例-データベース連携アプリ" aria-label="Permalink to &quot;より実践的な例：データベース連携アプリ&quot;">​</a></h2><p>シンプルなアプリができたので、今度はデータベースと連携するより実践的なアプリを作ってみよう。</p><h3 id="postgresqlを使った簡単なtodoアプリ" tabindex="-1">PostgreSQLを使った簡単なTodoアプリ <a class="header-anchor" href="#postgresqlを使った簡単なtodoアプリ" aria-label="Permalink to &quot;PostgreSQLを使った簡単なTodoアプリ&quot;">​</a></h3><h4 id="package-jsonを更新" tabindex="-1">package.jsonを更新 <a class="header-anchor" href="#package-jsonを更新" aria-label="Permalink to &quot;package.jsonを更新&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;todo-cloudrun-app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node server.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;express&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^4.18.2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^8.11.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^2.8.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="server-jsを更新" tabindex="-1">server.jsを更新 <a class="header-anchor" href="#server-jsを更新" aria-label="Permalink to &quot;server.jsを更新&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> express</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;express&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cors&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> express</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ミドルウェア</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(express.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベース接続（Cloud SQL使用）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  connectionString: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DATABASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ssl: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { rejectUnauthorized: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベーステーブル初期化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      CREATE TABLE IF NOT EXISTS todos (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        id SERIAL PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        title VARCHAR(255) NOT NULL,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        completed BOOLEAN DEFAULT FALSE,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      )</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Database initialized&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Database initialization error:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// アプリ起動時にデータベース初期化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// API エンドポイント</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Todo API is running on Cloud Run!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全てのTodoを取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/todos&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM todos ORDER BY created_at DESC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.rows);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error fetching todos:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Failed to fetch todos&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 新しいTodoを作成</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/todos&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.body;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;INSERT INTO todos (title) VALUES ($1) RETURNING *&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [title]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">201</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.rows[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error creating todo:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Failed to create todo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Todoの完了状態を更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/todos/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.params;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.body;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;UPDATE todos SET completed = $1 WHERE id = $2 RETURNING *&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [completed, id]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.rows[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error updating todo:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Failed to update todo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Todoを削除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/todos/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.params;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DELETE FROM todos WHERE id = $1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [id]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">204</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error deleting todo:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Failed to delete todo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ヘルスチェック</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/healthz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;OK&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 優雅なシャットダウン</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGTERM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGTERM received, closing database connections...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Todo API server running on port \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="cloud-sqlの設定" tabindex="-1">Cloud SQLの設定 <a class="header-anchor" href="#cloud-sqlの設定" aria-label="Permalink to &quot;Cloud SQLの設定&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cloud SQL APIを有効化</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sqladmin.googleapis.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PostgreSQLインスタンスを作成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instances</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> todo-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --database-version=POSTGRES_14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --tier=db-f1-micro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --region=asia-northeast1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># データベースを作成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> databases</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> todoapp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --instance=todo-db</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ユーザーを作成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> users</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> todouser</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --instance=todo-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --password=your-secure-password</span></span></code></pre></div><h3 id="環境変数を使ったデプロイ" tabindex="-1">環境変数を使ったデプロイ <a class="header-anchor" href="#環境変数を使ったデプロイ" aria-label="Permalink to &quot;環境変数を使ったデプロイ&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 環境変数付きでデプロイ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> todo-api</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1-docker.pkg.dev/my-cloudrun-project/my-repo/todo-app:latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asia-northeast1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --set-env-vars</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DATABASE_URL=&quot;postgresql://todouser:your-secure-password@/todoapp?host=/cloudsql/my-cloudrun-project:asia-northeast1:todo-db&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --add-cloudsql-instances</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cloudrun-project:asia-northeast1:todo-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --allow-unauthenticated</span></span></code></pre></div><h2 id="よくある問題と解決方法" tabindex="-1">よくある問題と解決方法 <a class="header-anchor" href="#よくある問題と解決方法" aria-label="Permalink to &quot;よくある問題と解決方法&quot;">​</a></h2><h3 id="_1-「コンテナが起動しない」" tabindex="-1">1. 「コンテナが起動しない」 <a class="header-anchor" href="#_1-「コンテナが起動しない」" aria-label="Permalink to &quot;1. 「コンテナが起動しない」&quot;">​</a></h3><p><strong>症状</strong>: デプロイは成功するが、アプリにアクセスできない</p><p><strong>原因と解決方法</strong>:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ 間違い：固定ポートを使用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ 正しい：環境変数PORTを使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(port)</span></span></code></pre></div><h3 id="_2-「メモリ不足エラー」" tabindex="-1">2. 「メモリ不足エラー」 <a class="header-anchor" href="#_2-「メモリ不足エラー」" aria-label="Permalink to &quot;2. 「メモリ不足エラー」&quot;">​</a></h3><p><strong>症状</strong>: アプリが途中で止まる、502エラーが発生</p><p><strong>解決方法</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># メモリを増やしてデプロイ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --memory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1Gi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-image</span></span></code></pre></div><h3 id="_3-「コールドスタートが遅い」" tabindex="-1">3. 「コールドスタートが遅い」 <a class="header-anchor" href="#_3-「コールドスタートが遅い」" aria-label="Permalink to &quot;3. 「コールドスタートが遅い」&quot;">​</a></h3><p><strong>症状</strong>: しばらくアクセスがないと、最初のリクエストが遅い</p><p><strong>解決方法</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最小インスタンス数を1に設定</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --min-instances</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-image</span></span></code></pre></div><h3 id="_4-「データベース接続エラー」" tabindex="-1">4. 「データベース接続エラー」 <a class="header-anchor" href="#_4-「データベース接続エラー」" aria-label="Permalink to &quot;4. 「データベース接続エラー」&quot;">​</a></h3><p><strong>症状</strong>: データベースに接続できない</p><p><strong>解決方法</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cloud SQLインスタンスを追加</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --add-cloudsql-instances</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROJECT_ID:REGION:INSTANCE_NAME</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-image</span></span></code></pre></div><h2 id="cloud-runのコスト管理" tabindex="-1">Cloud Runのコスト管理 <a class="header-anchor" href="#cloud-runのコスト管理" aria-label="Permalink to &quot;Cloud Runのコスト管理&quot;">​</a></h2><h3 id="料金の仕組み" tabindex="-1">料金の仕組み <a class="header-anchor" href="#料金の仕組み" aria-label="Permalink to &quot;料金の仕組み&quot;">​</a></h3><p>Cloud Runの料金は以下の要素で決まる：</p>`,72)),(a(),h(k,null,{default:i(()=>[t(l,{id:"mermaid-358",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20A%5BCloud%20Run%E6%96%99%E9%87%91%5D%20--%3E%20B%5BCPU%E4%BD%BF%E7%94%A8%E6%99%82%E9%96%93%5D%0A%20%20%20%20A%20--%3E%20C%5B%E3%83%A1%E3%83%A2%E3%83%AA%E4%BD%BF%E7%94%A8%E6%99%82%E9%96%93%5D%0A%20%20%20%20A%20--%3E%20D%5B%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E6%95%B0%5D%0A%20%20%20%20A%20--%3E%20E%5B%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E9%80%81%E4%BF%A1%E9%87%8F%5D%0A%20%20%20%20%0A%20%20%20%20B%20--%3E%20F%5BvCPU%20%C3%97%20%E5%AE%9F%E8%A1%8C%E6%99%82%E9%96%93%5D%0A%20%20%20%20C%20--%3E%20G%5BGB%20%C3%97%20%E5%AE%9F%E8%A1%8C%E6%99%82%E9%96%93%5D%0A%20%20%20%20D%20--%3E%20H%5B100%E4%B8%87%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%82%E3%81%9F%E3%82%8A%5D%0A%20%20%20%20E%20--%3E%20I%5BGB%20%C3%97%20%E9%80%81%E4%BF%A1%E9%87%8F%5D%0A"})]),fallback:i(()=>[...s[5]||(s[5]=[p(" Loading... ",-1)])]),_:1})),s[12]||(s[12]=n(`<h3 id="コスト削減のコツ" tabindex="-1">コスト削減のコツ <a class="header-anchor" href="#コスト削減のコツ" aria-label="Permalink to &quot;コスト削減のコツ&quot;">​</a></h3><h4 id="_1-最小インスタンス数を0に設定" tabindex="-1">1. 最小インスタンス数を0に設定 <a class="header-anchor" href="#_1-最小インスタンス数を0に設定" aria-label="Permalink to &quot;1. 最小インスタンス数を0に設定&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --min-instances</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><h4 id="_2-適切なリソース設定" tabindex="-1">2. 適切なリソース設定 <a class="header-anchor" href="#_2-適切なリソース設定" aria-label="Permalink to &quot;2. 適切なリソース設定&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 軽量なアプリの場合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --memory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 256Mi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --cpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重いアプリの場合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --memory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2Gi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --cpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div><h4 id="_3-タイムアウト設定でコスト制御" tabindex="-1">3. タイムアウト設定でコスト制御 <a class="header-anchor" href="#_3-タイムアウト設定でコスト制御" aria-label="Permalink to &quot;3. タイムアウト設定でコスト制御&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 60s</span></span></code></pre></div><h3 id="実際のコスト例" tabindex="-1">実際のコスト例 <a class="header-anchor" href="#実際のコスト例" aria-label="Permalink to &quot;実際のコスト例&quot;">​</a></h3><p><strong>小規模なWebアプリの場合</strong>：</p><ul><li>月間10万リクエスト</li><li>平均レスポンス時間: 200ms</li><li>メモリ: 256MB</li><li><strong>月額料金: 約$1-3</strong></li></ul><p><strong>中規模なAPIの場合</strong>：</p><ul><li>月間100万リクエスト</li><li>平均レスポンス時間: 500ms</li><li>メモリ: 512MB</li><li><strong>月額料金: 約$10-30</strong></li></ul><h2 id="まとめ-cloud-runで始める現代的なアプリ開発" tabindex="-1">まとめ：Cloud Runで始める現代的なアプリ開発 <a class="header-anchor" href="#まとめ-cloud-runで始める現代的なアプリ開発" aria-label="Permalink to &quot;まとめ：Cloud Runで始める現代的なアプリ開発&quot;">​</a></h2><p>この記事では、Cloud Runの基本概念から実際のアプリケーションデプロイまでを学んだ。</p><h3 id="cloud-runの主なメリット-再確認" tabindex="-1">Cloud Runの主なメリット（再確認） <a class="header-anchor" href="#cloud-runの主なメリット-再確認" aria-label="Permalink to &quot;Cloud Runの主なメリット（再確認）&quot;">​</a></h3><ul><li><strong>サーバー管理不要</strong>: インフラの心配をせずにコード開発に集中</li><li><strong>従量課金</strong>: 使った分だけの支払いで無駄なコストを削減</li><li><strong>自動スケーリング</strong>: アクセス増減に自動で対応</li><li><strong>高可用性</strong>: Googleのインフラを活用した安定性</li><li><strong>簡単デプロイ</strong>: 数分でアプリを世界に公開</li></ul><h3 id="次に学ぶべきこと" tabindex="-1">次に学ぶべきこと <a class="header-anchor" href="#次に学ぶべきこと" aria-label="Permalink to &quot;次に学ぶべきこと&quot;">​</a></h3><ol><li><strong>CI/CDパイプライン</strong>: GitHub ActionsやCloud Buildとの連携</li><li><strong>セキュリティ</strong>: 認証・認可、Secret Managerの活用</li><li><strong>監視・ログ</strong>: Cloud Monitoring、Cloud Loggingの設定</li><li><strong>パフォーマンス最適化</strong>: コンテナサイズの削減、起動時間の短縮</li><li><strong>マイクロサービス</strong>: 複数のCloud Runサービス間の連携</li></ol><h3 id="実践への第一歩" tabindex="-1">実践への第一歩 <a class="header-anchor" href="#実践への第一歩" aria-label="Permalink to &quot;実践への第一歩&quot;">​</a></h3><p>今すぐできること：</p><ol><li><strong>Google Cloudアカウントを作成</strong>（無料枠あり）</li><li><strong>シンプルなWebアプリを作成</strong>してCloud Runにデプロイ</li><li><strong>既存のアプリをコンテナ化</strong>してCloud Runに移行</li><li><strong>チームでCloud Runを試用</strong>して開発効率の向上を体験</li></ol><p>Cloud Runは、現代的なアプリケーション開発において強力な選択肢だ。サーバー管理の複雑さから解放され、スケーラブルで費用対効果の高いアプリケーションを素早く構築できる。</p><p>まずは小さなアプリから始めて、Cloud Runの便利さを体験してみよう。きっと、従来のサーバー管理がいかに大変だったかを実感するはずだ。</p>`,23))])}const A=e(d,[["render",g]]);export{B as __pageData,A as default};
