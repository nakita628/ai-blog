import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const g=JSON.parse('{"title":"neverthrow完全ガイド：TypeScriptで関数型エラーハンドリングを実践する","description":"neverthrowライブラリを使った関数型エラーハンドリングの実践ガイド。Result型の基本から実用的なパターン、safeTryの活用まで、try/catchを使わない新しいエラー処理のアプローチを詳しく解説します。","frontmatter":{"date":"2025-08-11T00:00:00.000Z","title":"neverthrow完全ガイド：TypeScriptで関数型エラーハンドリングを実践する","description":"neverthrowライブラリを使った関数型エラーハンドリングの実践ガイド。Result型の基本から実用的なパターン、safeTryの活用まで、try/catchを使わない新しいエラー処理のアプローチを詳しく解説します。","tags":["typescript","neverthrow","error-handling","functional-programming","result-type","either-type","best-practices"],"prev":{"text":"Elixirで始める機械学習：関数型言語の強みを活かしたAI開発","link":"/posts/2025/08/10"},"next":{"text":"Effect完全ガイド：TypeScriptの次世代標準ライブラリで堅牢なアプリケーションを構築","link":"/posts/2025/08/12"}},"headers":[],"relativePath":"posts/2025/08/11.md","filePath":"posts/2025/08/11.md"}'),k={name:"posts/2025/08/11.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",38)])])}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
