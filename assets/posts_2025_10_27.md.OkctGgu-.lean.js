import{_ as i,c as a,o as n,a7 as h}from"./chunks/framework.zg2pR_DR.js";const d=JSON.parse('{"title":"依存性注入（DI）完全入門：疎結合で保守性の高いアプリケーションを構築する","description":"依存性注入（DI）の基本概念から実装方法まで、初心者向けに詳しく解説。従来の依存関係の問題点、DIパターンの利点、TypeScriptでの実装例、フレームワークでの活用方法を通じて、疎結合で保守性の高いアプリケーション設計を学ぶ実践的なガイド。","frontmatter":{"date":"2025-10-27T00:00:00.000Z","title":"依存性注入（DI）完全入門：疎結合で保守性の高いアプリケーションを構築する","description":"依存性注入（DI）の基本概念から実装方法まで、初心者向けに詳しく解説。従来の依存関係の問題点、DIパターンの利点、TypeScriptでの実装例、フレームワークでの活用方法を通じて、疎結合で保守性の高いアプリケーション設計を学ぶ実践的なガイド。","tags":["dependency-injection","di","design-patterns","typescript","architecture","ioc","inversion-of-control","clean-code","maintainability"],"prev":{"text":"ElysiaJS完全入門：Bun最適化のTypeScriptフレームワークで高速API開発を実現する","link":"/posts/2025/10/26"},"next":false},"headers":[],"relativePath":"posts/2025/10/27.md","filePath":"posts/2025/10/27.md"}'),k={name:"posts/2025/10/27.md"};function l(p,s,t,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[h("",47)])])}const y=i(k,[["render",l]]);export{d as __pageData,y as default};
